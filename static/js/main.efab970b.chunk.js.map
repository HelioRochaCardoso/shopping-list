{"version":3,"sources":["components/OuterContainer.js","components/InputField.js","components/Done.js","components/ItemInfo.js","components/ItemList.js","components/ListContainer.js","components/ItemContainer.js","functions.js","actions.js","constants.js","containers/App.js","serviceWorker.js","reducers.js","index.js"],"names":["Box","props","Fragment","className","children","InputField","handleText","item","document","querySelector","validUserInput","value","length","match","placeholderShowing","setState","toggleTextError","handleNumber","quantity","validQuantity","parseInt","toggleNumberError","state","bind","classes","this","id","root","noValidate","autoComplete","TextField","label","type","placeholder","error","onKeyUp","getValue","onChange","InputLabelProps","shrink","defaultValue","InputProps","inputProps","min","max","onClick","Component","withStyles","theme","margin","spacing","width","Done","handleClick","event","toggleDone","onItemDone","title","ItemInfo","time","markImportant","deleteItem","Tooltip","placement","arrow","Badge","badgeContent","color","IconButton","aria-label","ItemList","listItem","timeStamp","itemQuantity","highlight","onDone","ListContainer","style","height","ItemContainer","items","onDelete","undefined","map","i","key","splicingArray","arr","index","removeQuantity","itemToAdd","splice","editCSSAttr","obj","hasAttr","action","arr_importantItem","arr_itemDone","targetElem","targetElemName","textContent","indexOf","replace","done","inner_container","cssText","setUserInput","stateProps","dispatch","date","hour","getHours","minute","getMinutes","seconds","getSeconds","getTimeStamp","Date","formElements","elements","arr_items","arr_itemsQuantity","arr_timeStamps","verifiedInput","stateVal","form","itemField","inputQuantity","itemDuplicate","slice","keyCode","target","alert","verifyUserInput","payload","trim","div","defaultInputField","setImportantItem","elemName","closest","indexImportant","indexElem","importantItem","obj_Edit","highlightImportant","setItemDone","indexDone","doneItem","App","getUserInput","onDeleteItem","OuterContainer","connect","itemList","timeStamps","itemImportant","itemDone","str_lastItemAdded","lastItemAdded","str_lastItemDeleted","lastItemDeleted","bindActionCreators","prop","text","itemDOMElement","itemToDelete","itemIndex","propsFromState","propsFromDispatch","Object","assign","Boolean","window","location","hostname","obj_itemsList","obj_timestamp","obj_importantItems","obj_itemsDone","obj_lastItemAdded","obj_lastItemDeleted","obj_itemQuantity","logger","createLogger","rootReducer","combineReducers","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.efab970b.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Box = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            <div className='tc'>\r\n                <h3><strong>My Shopping List</strong></h3>\r\n                <p><strong>To buy</strong></p>\r\n                <div>{props.children}</div>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Box;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst styles = theme => ({\r\n    root: {\r\n        '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        },\r\n    },\r\n});\r\n\r\nclass InputField extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            toggleTextError: false,\r\n            toggleNumberError: false\r\n        }\r\n\r\n        this.handleText = this.handleText.bind(this);\r\n        this.handleNumber = this.handleNumber.bind(this);\r\n    }\r\n\r\n    handleText = () => {\r\n        let regex = /(^[^- ][a-zA-Z -]+$|^[a-zA-Z]*$)/g,\r\n        item = document.querySelector('#itemField'),\r\n        validUserInput = (item.value.length > 0 && item.value.match(regex) !== null),\r\n        placeholderShowing = document.querySelector('#itemField:placeholder-shown');\r\n\r\n        if(validUserInput) this.setState({ toggleTextError: false });\r\n        if(!validUserInput) {\r\n            if(placeholderShowing !== null) return this.setState({ toggleTextError: false });\r\n\r\n            this.setState({ toggleTextError: true });\r\n        }\r\n    }\r\n\r\n    handleNumber = () => {\r\n        let quantity = document.querySelector('#inputQuantity'),\r\n        validQuantity = (parseInt(quantity.value) > 0 && parseInt(quantity.value) < 100);\r\n\r\n        if(validQuantity) this.setState({ toggleNumberError: false });\r\n        if(!validQuantity) this.setState({ toggleNumberError: true });\r\n    }\r\n\r\n    render() {\r\n        const { classes } = this.props;\r\n\r\n        return (\r\n            <form id='form' className={classes.root} noValidate autoComplete=\"off\">\r\n                <TextField\r\n                    id=\"itemField\"\r\n                    label=\"Item\"\r\n                    type=\"text\"\r\n                    placeholder='add item'\r\n                    error={this.state.toggleTextError}\r\n                    onKeyUp={this.props.getValue}\r\n                    onChange={this.handleText}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                />\r\n                <TextField\r\n                    id=\"inputQuantity\"\r\n                    label=\"Quantity\"\r\n                    type=\"number\"\r\n                    error={this.state.toggleNumberError}\r\n                    onKeyUp={this.props.getValue}\r\n                    onChange={this.handleNumber}\r\n                    InputLabelProps={{\r\n                        shrink: true,\r\n                    }}\r\n                    defaultValue='1'\r\n                    InputProps={{ inputProps: {min: 1, max: 99} }}\r\n                />\r\n                <input\r\n                    type='button'\r\n                    id='submitBtn'\r\n                    className='f7 dim ba ph3 pv2 mb2 dib black'\r\n                    value='Enter'\r\n                    onClick={this.props.getValue}\r\n                />\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStyles(styles)(InputField);","import React, { Component } from 'react';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\n\r\nclass Done extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {toggleDone: false}\r\n\r\n        this.handleClick = this.handleClick.bind(this);\r\n    }\r\n\r\n    handleClick = event => {\r\n        this.setState(state => ({\r\n            toggleDone: !state.toggleDone\r\n        }));\r\n        this.props.onItemDone(event);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='pointer flex self-center' id='done' onClick={this.handleClick} title='Not Done'>\r\n                {\r\n                    this.state.toggleDone ? <CheckBoxIcon className='green' id='doneIcon' /> : <CheckBoxOutlineBlankIcon id='checkOutIcon' />\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Done;","import React from 'react';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IndeterminateCheckBoxRoundedIcon from '@material-ui/icons/IndeterminateCheckBoxRounded';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Badge from '@material-ui/core/Badge';\r\n\r\nconst ItemInfo = ({ time, id, markImportant, item, quantity, deleteItem }) => {\r\n    return (\r\n        <Tooltip title={time} placement='right' id={`tooltip_${id}`} arrow>\r\n            <div className='flex justify-between items-center w-100' id={`inner_container_${id}`}>\r\n                <div className='flex justify-between w4'>\r\n                        <span\r\n                            className='pointer'\r\n                            id={`item_${id}`}\r\n                            onClick={markImportant}\r\n                        >\r\n                            {item}\r\n                        </span>\r\n                        <span>\r\n                            <Badge badgeContent={quantity} color=\"error\" title='Quantity'/>\r\n                        </span>\r\n                </div>\r\n                <IconButton\r\n                    id={`delete_${id}`}\r\n                    aria-label=\"delete\"\r\n                    onClick={deleteItem}\r\n                    title={`Delete ${item}`}\r\n                >\r\n                    <IndeterminateCheckBoxRoundedIcon id={`delete_${id}`}/>\r\n                </IconButton>\r\n            </div>\r\n        </Tooltip>\r\n    )\r\n}\r\n\r\nexport default ItemInfo;","import React from 'react';\r\nimport Done from './Done';\r\nimport ItemInfo from './ItemInfo';\r\n\r\nconst ItemList = ({listItem, timeStamp, itemQuantity, deleteItem, id, highlight, onDone}) => {\r\n    return (\r\n        <li className='tl list flex itemList justify-center' id={`itemList_${id}`}>\r\n            <Done onItemDone={onDone}/>\r\n            <ItemInfo\r\n                time={timeStamp}\r\n                markImportant={highlight}\r\n                id={id}\r\n                item={listItem}\r\n                quantity={itemQuantity}\r\n                deleteItem={deleteItem}\r\n            />\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default ItemList;","import React from 'react';\r\n\r\nconst ListContainer = (props) => {\r\n    return (\r\n        <div className='center mt6 ba br2 pa2 w-two-thirds bg-washed-red' style={{height: '60vh'}}>\r\n            <ul className='list pl0'>{props.children}</ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ListContainer;","import React from 'react';\r\nimport ItemList from './ItemList';\r\nimport ListContainer from './ListContainer';\r\n\r\nconst ItemContainer = ({items, timeStamp, quantity, onDelete, markImportant, onDone}) => {\r\n    return items === undefined ? <ListContainer/> : (\r\n        <React.Fragment>\r\n            <ListContainer>\r\n                {\r\n                    items.map((item, i) => {\r\n                        return (\r\n                            <ItemList\r\n                                key={`${item}_${i}`}\r\n                                id={i}\r\n                                listItem={items[i]}\r\n                                timeStamp={timeStamp[i]}\r\n                                itemQuantity={quantity[i]}\r\n                                deleteItem={onDelete}\r\n                                highlight={markImportant}\r\n                                onDone={onDone}\r\n                            />\r\n                        );\r\n                    })\r\n                }\r\n            </ListContainer>\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default ItemContainer;","export const verifyUserInput = (event, stateVal) => {\r\n  let form = document.querySelector('#form'),\r\n  item = form.itemField,\r\n  quantity = form.inputQuantity,\r\n  regex = /(^[^- ][a-zA-Z -]+$|^[a-zA-Z]*$)/g,\r\n  validUserInput = (item.value.length > 0 && item.value.match(regex) !== null),\r\n  validQuantity = (parseInt(quantity.value) > 0 && parseInt(quantity.value) < 100),\r\n  itemDuplicate = (stateVal.indexOf(item.value) > -1) || \r\n                  stateVal.indexOf(item.value+'s') > -1 || \r\n                  stateVal.indexOf(item.value.slice(0, -1)) > -1,\r\n  placeholderShowing = document.querySelector('#itemField:placeholder-shown');\r\n\r\n  if(event.keyCode === 13 || event.target.id === 'submitBtn') {\r\n    if(placeholderShowing !== null) {\r\n      return false;\r\n    } else if(itemDuplicate) {\r\n      if(stateVal[stateVal.indexOf(item.value+'s')]) alert(`${item.value} already on the list as ${stateVal[stateVal.indexOf(item.value+'s')]}`);\r\n      else if(stateVal[stateVal.indexOf(item.value.slice(0, -1))]) alert(`${item.value} already on the list as ${stateVal[stateVal.indexOf(item.value.slice(0, -1))]}`);\r\n      else alert(`${item.value} already on the list`);\r\n      return false;\r\n    } else if(!validUserInput || !validQuantity) {\r\n        return false;\r\n    } else {  \r\n      return true;\r\n    }\r\n  }\r\n  else return false\r\n}\r\n\r\nexport const defaultInputField = event => {\r\n  let div = document.querySelector('#form').elements;\r\n  div.itemField.value = '';\r\n  div.inputQuantity.value = '1';\r\n}\r\n\r\nexport const getTimeStamp = date => {\r\n  let hour = date.getHours(),\r\n  minute = date.getMinutes(),\r\n  seconds = date.getSeconds();\r\n  hour = hour <= 9 ? '0' + hour : hour;\r\n  minute = minute <= 9 ? '0' + minute : minute;\r\n  seconds = seconds <= 9 ? '0' + seconds : seconds;\r\n  const timeAdded = `Added at ${hour}:${minute}:${seconds}`;\r\n  return timeAdded;\r\n}\r\n\r\nexport const splicingArray = (arr, index, removeQuantity = 0, itemToAdd = undefined) => {\r\n  itemToAdd === undefined ? arr.splice(index, removeQuantity) : arr.splice(index, removeQuantity, itemToAdd);\r\n  return arr;\r\n}\r\n\r\nexport const highlightImportant = (event, index, stateVal) => {\r\n  const obj_Edit = {\r\n    state: stateVal,\r\n    event: event.target,\r\n    action: 'important',\r\n    id: index\r\n  },\r\n  editedAttr = editCSSAttr(obj_Edit);\r\n\r\n  return editedAttr;\r\n}\r\n\r\nexport const setDone = (stateVal, index) => {\r\n  const obj_Edit = {\r\n    state: stateVal,\r\n    id: index\r\n  },\r\n  editedAttr = editCSSAttr(obj_Edit);\r\n\r\n  return editedAttr;\r\n}\r\n\r\nexport const editCSSAttr = obj => {\r\n  let { action, id, state: {arr_importantItem}, state: {arr_itemDone} } = obj,\r\n  targetElem = document.querySelector(`#item_${id}`),\r\n  targetElemName = targetElem.textContent,\r\n  CSSImportant = 'red b',\r\n  CSSDone = 'strike',\r\n  hasAttr,\r\n  index;\r\n\r\n  if(action === 'important') {\r\n    hasAttr = targetElem.className.indexOf(CSSImportant) > -1;\r\n    if(hasAttr) {\r\n      index = arr_importantItem.indexOf(targetElemName);\r\n      targetElem.className = targetElem.className.replace(CSSImportant, '');\r\n      targetElem.title = '';\r\n      return splicingArray(arr_importantItem, index, 1);\r\n    } else {\r\n      targetElem.className += ` ${CSSImportant}`;\r\n      targetElem.title = 'Important Item';\r\n      return [...arr_importantItem, targetElemName];\r\n    }\r\n  } else {\r\n    hasAttr = targetElem.className.indexOf(CSSDone) > -1;\r\n    let done = document.querySelector('#done'),\r\n    inner_container = document.querySelector(`#inner_container_${id}`);\r\n    if(hasAttr) {\r\n      index = arr_itemDone.indexOf(targetElemName);\r\n      targetElem.className = targetElem.className.replace(CSSDone, '');\r\n      done.title = 'Not Done';\r\n      inner_container.style.cssText = '';\r\n      return splicingArray(arr_itemDone, index, 1);\r\n    } else {\r\n      targetElem.className += ` ${CSSDone}`;\r\n      done.title = 'Done';\r\n      inner_container.style.cssText = 'width: 100%; height: 100%; z-index: 2; opacity: 0.4; pointer-events: none; filter: alpha(opacity = 50)';\r\n      return [...arr_itemDone, targetElemName];\r\n    }\r\n  }\r\n}","import {\r\n    USER_INPUT,\r\n    TIMESTAMP,\r\n    ITEM_IMPORTANT,\r\n    ITEM_DONE,\r\n    LAST_ITEM_ADDED,\r\n    LAST_ITEM_DELETED,\r\n    ITEM_QUANTITY,\r\n    REMOVE_ITEM,\r\n    REMOVE_TIMESTAMP,\r\n    REMOVE_ITEM_IMPORTANT,\r\n    REMOVE_ITEM_DONE,\r\n    REMOVE_ITEM_QUANTITY\r\n} from './constants';\r\n\r\nimport {\r\n    getTimeStamp,\r\n    verifyUserInput,\r\n    defaultInputField,\r\n    highlightImportant,\r\n    splicingArray,\r\n    setDone\r\n} from './functions';\r\n\r\nexport const setUserInput = (event, stateProps) => (dispatch) => {\r\n    let timeStamp = getTimeStamp(new Date()),\r\n    formElements = document.querySelector('#form').elements,\r\n    { arr_items, arr_itemsQuantity, arr_timeStamps } = stateProps,\r\n    verifiedInput = verifyUserInput(event, arr_items),\r\n    item = formElements.itemField.value,\r\n    quantity = formElements.inputQuantity.value;\r\n\r\n    if(verifiedInput) {\r\n        dispatch({ type: USER_INPUT, payload: [...arr_items, item.trim()] });\r\n        dispatch({ type: ITEM_QUANTITY, payload: [...arr_itemsQuantity, parseInt(quantity)] });\r\n        dispatch({ type: TIMESTAMP, payload: [...arr_timeStamps, timeStamp] });\r\n        dispatch({ type: LAST_ITEM_ADDED, payload: item.trim() });\r\n        defaultInputField(event);\r\n    }\r\n}\r\n\r\nexport const setImportantItem = (event, stateProps) => dispatch => {\r\n    let elemName = event.target.closest('.itemList').querySelector('span').textContent,\r\n    { arr_items, arr_importantItem } = stateProps,\r\n    indexImportant = arr_importantItem.indexOf(elemName),\r\n    indexElem = arr_items.indexOf(elemName),\r\n    importantItem = highlightImportant(event, indexElem, stateProps);\r\n    \r\n    if(indexImportant > -1) {\r\n        dispatch({ type: REMOVE_ITEM_IMPORTANT, payload: importantItem });\r\n    } else {\r\n        dispatch({ type: ITEM_IMPORTANT, payload: importantItem });\r\n    }\r\n}\r\n\r\nexport const setItemDone = (event, stateProps) => dispatch => {\r\n    let { arr_items, arr_itemDone } = stateProps,\r\n    elemName = event.target.closest('.itemList').querySelector('span').textContent,\r\n    indexElem = arr_items.indexOf(elemName),\r\n    indexDone = arr_itemDone.indexOf(elemName),\r\n    doneItem = setDone(stateProps, indexElem);\r\n\r\n    if(indexDone > -1) {\r\n        dispatch({ type: REMOVE_ITEM_DONE, payload: doneItem });\r\n    } else {\r\n        dispatch({ type: ITEM_DONE, payload: doneItem });\r\n    }\r\n}\r\n\r\nexport const setItemDeleted = (text, stateProps) => (dispatch) => {\r\n    const { arr_itemsQuantity, arr_items, arr_timeStamps, arr_importantItem, arr_itemDone } = stateProps,\r\n    itemDOMElement = text.target.closest('.itemList').querySelector('span'),\r\n    itemToDelete = itemDOMElement.textContent,\r\n    itemIndex = itemDOMElement.id;\r\n\r\n    dispatch({ type: LAST_ITEM_DELETED, payload: itemToDelete });\r\n    dispatch({ type: REMOVE_ITEM_QUANTITY, payload: splicingArray(arr_itemsQuantity, itemIndex, 1) });\r\n    dispatch({ type: REMOVE_ITEM, payload: splicingArray(arr_items, itemIndex, 1) });\r\n    dispatch({ type: REMOVE_TIMESTAMP, payload: splicingArray(arr_timeStamps, itemIndex, 1) });\r\n\r\n    if(arr_importantItem.indexOf(itemToDelete) > -1) {\r\n        dispatch({\r\n            type: REMOVE_ITEM_IMPORTANT,\r\n            payload: splicingArray(arr_importantItem, itemIndex, 1)\r\n        });\r\n    }\r\n    if(arr_itemDone.indexOf(itemToDelete) > -1) {\r\n        dispatch({\r\n            type: REMOVE_ITEM_DONE,\r\n            payload: splicingArray(arr_itemDone, itemIndex, 1)\r\n        })\r\n    }\r\n}","export const USER_INPUT = 'USER_INPUT';\r\nexport const TIMESTAMP = 'TIMESTAMP';\r\nexport const ITEM_IMPORTANT = 'ITEM_IMPORTANT';\r\nexport const ITEM_DONE = 'ITEM_DONE';\r\nexport const LAST_ITEM_ADDED = 'LAST_ITEM_ADDED';\r\nexport const LAST_ITEM_DELETED = 'LAST_ITEM_DELETED';\r\nexport const ITEM_QUANTITY = 'ITEM_QUANTITY';\r\nexport const REMOVE_ITEM = 'REMOVE_ITEM';\r\nexport const REMOVE_TIMESTAMP = 'REMOVE_TIMESTAMP';\r\nexport const REMOVE_ITEM_IMPORTANT = 'REMOVE_ITEM_IMPORTANT';\r\nexport const REMOVE_ITEM_DONE = 'REMOVE_ITEM_DONE';\r\nexport const REMOVE_ITEM_QUANTITY = 'REMOVE_ITEM_QUANTITY';","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport OuterContainer from '../components/OuterContainer';\nimport InputField from '../components/InputField';\nimport ItemContainer from '../components/ItemContainer';\nimport './App.css';\nimport { setUserInput, setImportantItem, setItemDone, setItemDeleted } from '../actions';\nimport { bindActionCreators } from 'redux';\n\nconst mapStateToProps = state => {\n  return {\n    arr_items: state.itemList.arr_items,\n    arr_timeStamps: state.timeStamps.arr_timeStamps,\n    arr_importantItem: state.itemImportant.arr_importantItem,\n    arr_itemDone: state.itemDone.arr_itemDone,\n    str_lastItemAdded: state.lastItemAdded.str_lastItemAdded,\n    str_lastItemDeleted: state.lastItemDeleted.str_lastItemDeleted,\n    arr_itemsQuantity: state.itemQuantity.arr_itemsQuantity\n  }\n}\n\nconst mapDispatchToProps = dispatch => {\n  return bindActionCreators(\n    {\n      getUserInput: (event, prop) => setUserInput(event, prop),\n      highlightImportant: (event, prop) => setImportantItem(event, prop),\n      onDone: (event, prop) => setItemDone(event, prop),\n      onDeleteItem: (event, prop) => setItemDeleted(event, prop)\n    }, dispatch\n  )\n}\n\nconst mergeProps = (propsFromState, propsFromDispatch) => {\n  return Object.assign({}, propsFromState, {\n    ...propsFromState,\n    ...propsFromDispatch,\n    getUserInput: event => propsFromDispatch.getUserInput(event, {\n        arr_items: propsFromState.arr_items,\n        arr_itemsQuantity: propsFromState.arr_itemsQuantity,\n        arr_timeStamps: propsFromState.arr_timeStamps,\n      }\n    ),\n    onDone: event => propsFromDispatch.onDone(event, {\n        arr_items: propsFromState.arr_items,\n        arr_itemDone: propsFromState.arr_itemDone\n      }\n    ),\n    onDeleteItem: event => propsFromDispatch.onDeleteItem(event, {\n        arr_items: propsFromState.arr_items,\n        arr_itemsQuantity: propsFromState.arr_itemsQuantity,\n        arr_timeStamps: propsFromState.arr_timeStamps,\n        arr_importantItem: propsFromState.arr_importantItem,\n        arr_itemDone: propsFromState.arr_itemDone\n      }\n    ),\n    highlightImportant: event => propsFromDispatch.highlightImportant(event, {\n        arr_items: propsFromState.arr_items,\n        arr_importantItem: propsFromState.arr_importantItem\n      }\n    )\n  })\n}\n\nclass App extends Component {\n  render() {\n    const { arr_items, arr_timeStamps, arr_itemsQuantity, getUserInput, onDeleteItem, highlightImportant, onDone } = this.props;\n    return (\n      <OuterContainer>\n        <InputField getValue={getUserInput} />\n        <ItemContainer items={arr_items} timeStamp={arr_timeStamps} quantity={arr_itemsQuantity} onDelete={onDeleteItem} markImportant={highlightImportant} onDone={onDone}>\n        </ItemContainer>\n      </OuterContainer>\n    )\n  }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps, mergeProps)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    USER_INPUT,\r\n    TIMESTAMP,\r\n    ITEM_IMPORTANT,\r\n    ITEM_DONE,\r\n    LAST_ITEM_ADDED,\r\n    LAST_ITEM_DELETED,\r\n    ITEM_QUANTITY,\r\n    REMOVE_ITEM,\r\n    REMOVE_TIMESTAMP,\r\n    REMOVE_ITEM_IMPORTANT,\r\n    REMOVE_ITEM_DONE,\r\n    REMOVE_ITEM_QUANTITY\r\n} from './constants';\r\n\r\nconst obj_itemsList = {\r\n    arr_items: []\r\n}\r\n\r\nexport const itemList = (state=obj_itemsList, action={}) => {\r\n    switch(action.type) {\r\n        case USER_INPUT:\r\n            return Object.assign({}, state, {arr_items: action.payload});\r\n        case REMOVE_ITEM:\r\n            return Object.assign({}, state, {arr_items: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst obj_timestamp = { \r\n    arr_timeStamps: []\r\n}\r\n\r\nexport const timeStamps = (state=obj_timestamp, action={}) => {\r\n    switch(action.type) {\r\n        case TIMESTAMP:\r\n            return Object.assign({}, state, {arr_timeStamps: action.payload});\r\n        case REMOVE_TIMESTAMP:\r\n            return Object.assign({}, state, {arr_timeStamps: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst obj_importantItems = {\r\n    arr_importantItem: []\r\n}\r\n\r\nexport const itemImportant = (state=obj_importantItems, action={}) => {\r\n    switch(action.type) {\r\n        case ITEM_IMPORTANT:\r\n            return Object.assign({}, state, {arr_importantItem: action.payload});\r\n        case REMOVE_ITEM_IMPORTANT:\r\n            return Object.assign({}, state, {arr_importantItem: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst obj_itemsDone = {\r\n    arr_itemDone: []\r\n}\r\n\r\nexport const itemDone = (state=obj_itemsDone, action={}) => {\r\n    switch(action.type) {\r\n        case ITEM_DONE:\r\n            return Object.assign({}, state, {arr_itemDone: action.payload});\r\n        case REMOVE_ITEM_DONE:\r\n            return Object.assign({}, state, {arr_itemDone: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst obj_lastItemAdded = {\r\n    str_lastItemAdded: ''\r\n}\r\n\r\nexport const lastItemAdded = (state=obj_lastItemAdded, action={}) => {\r\n    switch(action.type) {\r\n        case LAST_ITEM_ADDED:\r\n            return Object.assign({}, state, {str_lastItemAdded: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst obj_lastItemDeleted = {\r\n    str_lastItemDeleted: ''\r\n}\r\n\r\nexport const lastItemDeleted = (state=obj_lastItemDeleted, action={}) => {\r\n    switch(action.type) {\r\n        case LAST_ITEM_DELETED:\r\n            return Object.assign({}, state, {str_lastItemDeleted: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst obj_itemQuantity = {\r\n    arr_itemsQuantity: []\r\n}\r\n\r\nexport const itemQuantity = (state=obj_itemQuantity, action={}) => {\r\n    switch(action.type) {\r\n        case ITEM_QUANTITY:\r\n            return Object.assign({}, state, {arr_itemsQuantity: action.payload});\r\n        case REMOVE_ITEM_QUANTITY:\r\n            return Object.assign({}, state, {arr_itemsQuantity: action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore, applyMiddleware, combineReducers } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport thunkMiddleware from 'redux-thunk';\nimport './index.css';\nimport App from './containers/App';\nimport * as serviceWorker from './serviceWorker';\nimport 'tachyons';\nimport { itemList, timeStamps, itemImportant, itemDone, lastItemAdded, lastItemDeleted, itemQuantity } from './reducers';\n\nconst logger = createLogger();\n\nconst rootReducer = combineReducers({ itemList, timeStamps, itemImportant, itemDone, lastItemAdded, lastItemDeleted, itemQuantity });\n\nconst store = createStore(rootReducer, applyMiddleware(thunkMiddleware, logger));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>, document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}